{"mappings":"wsBAAO,IAAMA,EAAa,CACxB,CAAEC,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,eAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,MAAOC,KAAM,UACnB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,MAAOC,KAAM,SACnB,CAAED,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,MAAOC,KAAM,WACnB,CAAED,GAAI,IAAKC,KAAM,mBACjB,CAAED,GAAI,MAAOC,KAAM,YACnB,CAAED,GAAI,GAAIC,KAAM,YAChB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,GAAIC,KAAM,W,ICZlB,IAAAC,EAAAC,EAAA,S,uCAGMC,EAAU,mCA4BhB,SAASC,EAAiBC,GACxB,IAAMC,EAAiB,GAQvB,OAPAC,EAAAC,WAAWC,KAAI,SAAAC,GACb,I,IADgBX,EAAEW,EAAFX,GAAIC,EAAIU,EAAJV,KACXW,EAAI,EAAGA,EAAIN,EAAYO,OAAQD,GAAK,EACvCZ,IAAOM,EAAYM,IACrBL,EAAeO,KAAKb,E,IAInBM,EAAeQ,KAAK,K,CAK7B,SAASC,IACP,OAAOC,MACL,2DAAmEC,OAARd,IAC3De,MAAK,SAAAC,G,OAAYA,EAASC,M,aAGfC,I,OAAAC,EAAMC,MAAAC,KAAAC,U,UAANH,I,OAAAA,EAAfI,EAAAzB,EAAA,CAAAyB,EAAAC,GAAAC,MAAA,SAAAC,I,IACQC,EACAC,E,kFADgBhB,I,cAAhBe,EAAOE,EAAAC,KACPF,EAAQD,EAAQA,QACnBrB,KACC,SAAAC,G,IACEX,EAAEW,EAAFX,GACAmC,EAAWxB,EAAXwB,YACAC,EAAKzB,EAALyB,MACAC,EAAS1B,EAAT0B,UACAC,EAAY3B,EAAZ2B,a,MACM,4DAGmCpB,OAFdlB,EAAG,kFAEsDkB,OAA3CiB,EAAY,iCAGlCjB,OAHiEkB,EAAM,gEAMvElB,OAHAkB,EAAMG,cAAc,gFAIdrB,OADNb,EAAiBgC,GAAW,yCACenB,OAArC,IAAIsB,KAAKF,GAAcG,cAAc,yC,IAMjE1B,KAAK,I,kBACDiB,G,4CA3BYR,MAAAC,KAAAC,U,UA+BNgB,I,OAAAA,EAAff,EAAAzB,EAAA,CAAAyB,EAAAC,GAAAC,MAAA,SAAAC,I,IACQE,E,kFAAcV,I,OAAdU,EAAKC,EAAAC,KAEXS,EAAAC,KAAKC,SAASC,mBAAmB,YAAad,G,4CAHtBR,MAAAC,KAAAC,U,aAAXgB,EAAWlB,MAAAC,KAAAC,U,CAK1BqB,E","sources":["src/js/genres-list.js","src/js/filmoteka.js"],"sourcesContent":["export const genresList = [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n","// https://api.themoviedb.org/3pTwMUEavTzVOh6yLN0aEwR7uSy.jpg\n\n// genre_ids: (3)[(16, 28, 14)];\n// poster_path: '/3pTwMUEavTzVOh6yLN0aEwR7uSy.jpg';\n// release_date: '2021-12-24';\n// title: 'Jujutsu Kaisen 0';\n// vote_average: 7.935;\nimport { genresList } from './genres-list';\nimport { refs } from './refs';\n// console.log(refs);\nconst API_KEY = '74bfe718a55ac7916c6e6ad87b15f944';\n\nfunction fetchGenres() {\n  return fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`\n  )\n    .then(response => response.json())\n    .then(data => data);\n}\n\n// const idArrayList = [28, 12, 16];\n// async function searchGenresById(idArrayList) {\n//   const genresNameList = [];\n//   const genresList = await fetchGenres();\n//   console.log(genresList.genres);\n//   genresList.genres.map(({ id, name }) => {\n//     // console.log('id', id);\n//     for (let i = 0; i < idArrayList.length; i += 1) {\n//       if (id === idArrayList[i]) {\n//         genresNameList.push(name);\n//       }\n//     }\n//   });\n//   result = await genresNameList.join(', ');\n//   return result;\n// }\n\n// const idArrayList = [28, 12, 16];\nfunction searchGenresById(idArrayList) {\n  const genresNameList = [];\n  genresList.map(({ id, name }) => {\n    for (let i = 0; i < idArrayList.length; i += 1) {\n      if (id === idArrayList[i]) {\n        genresNameList.push(name);\n      }\n    }\n  });\n  return genresNameList.join(', ');\n}\n\n// console.log(searchGenresById(idArrayList));\n\nfunction fetchFilms() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  ).then(response => response.json());\n}\n\nasync function markUp() {\n  const results = await fetchFilms();\n  const value = results.results\n    .map(\n      ({\n        id,\n        poster_path,\n        title,\n        genre_ids,\n        release_date,\n        }) => `<li class=\"film-item\">\n        <a class=\"film-link\" id=\"${id}\">\n  <div class=\"film-wrap\">\n  <img src=\"https://image.tmdb.org/t/p/original${poster_path}\" class=\"film-item-img\" alt=\"${title}\" width=\"300\">\n  </div>\n  <div>\n  <h3 class=\"film-title\">${title.toUpperCase()}</h3>\n  </div>\n  <div class=\"film-genres-date\">\n  <p class=\"film-genres\">${searchGenresById(genre_ids)}</p>\n  <p class=\"film-release-date\">${new Date(release_date).getFullYear()}</p>\n  \n   </div>\n   </a>\n   </li>`\n    )\n    .join('');\n  return value;\n}\n/* <p>${vote_average}</p>; */\n\nasync function renderFilms() {\n  const value = await markUp();\n\n  refs.filmList.insertAdjacentHTML('beforeend', value);\n}\nrenderFilms();\n"],"names":["$e70fdf67e8ff9662$export$65f5202b5c3d7552","id","name","$bpxeT","parcelRequire","$0d1473df3547cfcd$var$API_KEY","$0d1473df3547cfcd$var$searchGenresById","idArrayList","genresNameList","$jPW8c","genresList","map","param","i","length","push","join","$0d1473df3547cfcd$var$fetchFilms","fetch","concat","then","response","json","$0d1473df3547cfcd$var$markUp","$0d1473df3547cfcd$var$_markUp","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","results","value","_ctx","sent","poster_path","title","genre_ids","release_date","toUpperCase","Date","getFullYear","$0d1473df3547cfcd$var$_renderFilms","$4Nugj","refs","filmList","insertAdjacentHTML","$0d1473df3547cfcd$var$renderFilms"],"version":3,"file":"films.fc5493b6.js.map"}