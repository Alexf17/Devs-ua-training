{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SCAAC,EAAAD,EAAA,S,sBDKA,MAAME,EAAe,ICJN,MAIRC,kBACCC,EAAAH,GAAMI,SAASC,QAAU,+BAExB,IAAK,MAAMC,QAAiBH,EAAAH,GAAMO,IAAI,UAAUC,KAAKC,8DAErD,OADAC,QAAQC,IAAIL,GACLA,C,CAEN,MAAOM,GAAQF,QAAQE,MAAMA,E,EAI5BC,aAAS,OAAOL,KAAKC,E,CAIrBI,WAAOC,GACVN,KAAKC,GAAKK,C,CAnBdC,cACIP,KAAKC,GAAK,C,GDKlBX,EAAAkB,KAAKC,SAASC,iBAAiB,SAG/B,SAAyBC,GAErB,GADAA,EAAMC,iBACiD,MAAnDD,EAAME,OAAOC,WAAWC,cAAcC,SACtC,OAEJ,IAAIC,EAAaN,EAAME,OAAOC,WAAWC,cAAcd,GACvDC,QAAQgB,IAAIP,EAAME,OAAOC,WAAWC,eACpCtB,EAAaY,OAASY,EACFxB,EAAa0B,W","sources":["src/js/modal-filmoteka.js","src/js/film-api.js"],"sourcesContent":["import {refs} from './refs'\nimport MovieService from './film-api';\nimport { genresList } from './genres-list';\nimport { title } from 'process';\n\nconst movieService = new MovieService();\n\n\nrefs.filmList.addEventListener('click', onFilmItemClick);\n\n\nfunction onFilmItemClick(event) {\n    event.preventDefault();\n    if (event.target.parentNode.parentElement.nodeName !== 'A') {\n        return\n    }\n    let filmCardId = event.target.parentNode.parentElement.id;\n    console.dir(event.target.parentNode.parentElement);\n    movieService.filmId = filmCardId;\n    const backendData = movieService.fetchById();\n   \n  }\n\n  function createFilmModalMarkup(data) {\nconst markup = data(({poster_path,\n    original_title,\n    title,\n    vote_average,\n    vote_count,\n    genres,\n    popularity,\n    overview,}) => `<img class=\"modal-film-image\" src=\"https://image.tmdb.org/t/p/original${poster_path}\n    \" alt=\"${title}\">\n    <h2 class=\"modal-film-title\">${title}</h2>\n    <ul class=\"modal-film-properties-list\">\n      <li class=\"modal-film-properties-item\">Vote/Votes</li>\n      <li class=\"modal-film-properties-item\">Popularity</li>\n      <li class=\"modal-film-properties-item\">Original Title</li>\n      <li class=\"modal-film-properties-item\">Genre</li>\n    </ul>\n    <ul class=\"modal-film-value-list\">\n      <li class=\"modal-film-value-item\"><span class=\"modal-film-vote-average\">${vote_average}</span>/<span class=\"modal-film-vote-count\">${vote_count}</span></li>\n      <li class=\"modal-film-value-item\">${popularity}</li>\n      <li class=\"modal-film-value-item\">${original_title}</li>\n      <li class=\"modal-film-value-item\">${genres.name.join(', ')}</li>\n    </ul>\n    <h3 class=\"modal-film-about-title\">ABOUT</h3>\n    <p class=\"modal-film-about-text\">${overview}</p>\n    <ul class=\"modal-film-button-list\">\n      <li class=\"modal-film-button-item\"><button class=\"modal-film-button\" type=\"button\">ADD TO WATCHED</button></li>\n      <li class=\"modal-film-button-item\"><button class=\"modal-film-button\" type=\"button\">ADD TO QUEUE</button></li>\n    </ul>`) \n}\n  \n\n","import axios from \"axios\";\nexport default class MovieService {\n    constructor() {\n        this.id = 0;\n       }\n       async fetchById(){\n        axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n        const API_KEY = '74bfe718a55ac7916c6e6ad87b15f944';\n         try {const response = await axios.get(`/movie/${this.id}?api_key=${API_KEY}&language=en-US`) \n         console.log(response); \n         return response;   \n            \n        } catch (error) {console.error(error);\n            \n        }\n       }\n       get filmId(){return this.id\n\n       }\n\n       set filmId(newId){\n        this.id = newId;\n       }\n}\n\n\n"],"names":["$krGWQ","parcelRequire","$2shzp","$b7eb70fc4c285a09$var$movieService","async","$parcel$interopDefault","defaults","baseURL","response","get","this","id","console","log","error","filmId","newId","constructor","refs","filmList","addEventListener","event","preventDefault","target","parentNode","parentElement","nodeName","filmCardId","dir","fetchById"],"version":3,"file":"films.3b0d4b07.js.map"}