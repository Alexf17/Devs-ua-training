{"mappings":"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","sources":["src/js/modal-filmoteka.js","src/js/film-api.js","<<jsx-config-pragma.js>>"],"sourcesContent":["import { refs } from './refs';\nimport MovieService from './film-api';\nimport { genresList } from './genres-list';\nimport { title } from 'process';\nimport {cleanerMarkup} from './createMarkUp'\n\nconst movieService = new MovieService();\n\nlet saveDataStorage = JSON.parse(localStorage.getItem('saveDataStorage')) ||  {\n  queue: [],\n  watched: [],\n}\nif (saveDataStorage.watched.length !== 0) {\n  refs.watchedHederBtnEl.textContent = `watched  '${saveDataStorage.watched.length}'`;\n}\nif (saveDataStorage.watched.length !== 0) {\n  refs.queueHederBtnEl.textContent = `queue '${saveDataStorage.queue.length}'`;\n}\nconsole.log(saveDataStorage)\n\n\nrefs.filmList.addEventListener('click', onFilmItemClick);\nrefs.closeBtnEl.addEventListener('click', onCloseFilmModal);\nrefs.modalFilmWrap.addEventListener('click', onModalBtnClick);\nrefs.watchedHederBtnEl.addEventListener('click', onWatchedHederBtnClick);\nrefs.queueHederBtnEl.addEventListener('click', onQueueHederBtnClick);\n\n\nfunction onWatchedHederBtnClick() {\n  cleanerMarkup(refs.filmList);\n}\n\nfunction onQueueHederBtnClick() {\n  cleanerMarkup(refs.filmList);\n}\n\n\nasync function onFilmItemClick(event) {\n  event.preventDefault();\n  if (event.target.parentNode.parentElement.nodeName !== 'A') {\n    return;\n  }\n  let filmCardId = event.target.parentNode.parentElement.id;\n  // console.dir(event.target.parentNode.parentElement);\n  movieService.filmId = filmCardId;\n  const backendData = await movieService.fetchById();\n  const markup = await createFilmModalMarkup(backendData.data);\n  cleanerMarkup(refs.modalFilmWrap);\n  renderFilmModalMarkup(markup);\n  \n  \n  refs.backdropEl.classList.remove('visually-hidden');\n}\n\nfunction createFilmModalMarkup(data) {\n  const {\n    poster_path,\n    original_title,\n    title,\n    vote_average,\n    vote_count,\n    genres,\n    popularity,\n    overview,\n    id,\n  } = data;\n  const genreItems = genres.map(({ name }) => name).join(', ');\n  const markup = `<div class=\"modal-film-image-wrap\"><img class=\"modal-film-image\" src=\"https://image.tmdb.org/t/p/original${poster_path}\n    \" alt=\"${title}\" width=\"375\" height=\"478\">\n    </div>\n    <div class=\"modal-film-info-wrap\">\n    <h2 class=\"modal-film-title\">${title}</h2>\n    <div class=\"modal-film-info-list\">\n    <ul class=\"modal-film-properties-list\">\n      <li class=\"modal-film-properties-item\">Vote/Votes</li>\n      <li class=\"modal-film-properties-item\">Popularity</li>\n      <li class=\"modal-film-properties-item\">Original Title</li>\n      <li class=\"modal-film-properties-item\">Genre</li>\n    </ul>\n    <ul class=\"modal-film-value-list\">\n      <li class=\"modal-film-value-item\"><span class=\"modal-film-vote-average\">${vote_average}</span>/<span class=\"modal-film-vote-count\">${vote_count}</span></li>\n      <li class=\"modal-film-value-item\">${popularity}</li>\n      <li class=\"modal-film-value-item\">${original_title.toUpperCase()}</li>\n      <li class=\"modal-film-value-item\">${genreItems}</li>\n    </ul>\n    </div>\n    <h3 class=\"modal-film-about-title\">ABOUT</h3>\n    <p class=\"modal-film-about-text\">${overview}</p>\n    <ul class=\"modal-film-button-list\">\n      <li class=\"modal-film-button-item\"><button id=\"${id}\" class=\"modal-film-button\" type=\"button\" data-action='watched'>ADD TO WATCHED</button></li>\n      <li class=\"modal-film-button-item\"><button id=\"${id}\" class=\"modal-film-button\" type=\"button\" data-action='queue'>ADD TO QUEUE</button></li>\n    </ul> </div>`;\n  return markup;\n}\n\nfunction renderFilmModalMarkup(markup) {\n  refs.modalFilmWrap.insertAdjacentHTML('beforeend', markup);\n\n}\n\nfunction onCloseFilmModal() {\n  refs.backdropEl.classList.add('visually-hidden');\n  cleanerMarkup(refs.modalFilmWrap);\n}\n\n// добавили слушателя после рендера кнопок\n    // refs.queueModalBtnEl.addEventListener(\"click\", onQueueModalBtnClick);\n    // refs.watchedModalBtnEl.addEventListener(\"click\", onWatchedModalBtnClick);\n\nfunction onModalBtnClick(e) {\n  if (e.target.nodeName !== \"BUTTON\") {\n    return;\n  }\n  \n  if (e.target.dataset.action === \"watched\") {\n    // console.log(e.target.id);\n    let value = e.target.id;\n    \n    saveDataStorage.watched.push(value);\n    if (saveDataStorage.watched.length !== 0) {\n  refs.watchedHederBtnEl.textContent = `watched  '${saveDataStorage.watched.length}'`;\n}\n    localStorage.setItem('saveDataStorage', JSON.stringify(saveDataStorage))\n  }\n  \n  if (e.target.dataset.action === \"queue\") {\n    let value2 = e.target.id;\n    \n    saveDataStorage.queue.push(value2);\n    \n    if (saveDataStorage.watched.length !== 0) {\n  refs.queueHederBtnEl.textContent = `queue '${saveDataStorage.queue.length}'`;\n}\n    localStorage.setItem('saveDataStorage', JSON.stringify(saveDataStorage))\n  }\n}\n\n","import axios from \"axios\";\nexport default class MovieService {\n    constructor() {\n        this.id = 0;\n       }\n       async fetchById(){\n        axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n        const API_KEY = '74bfe718a55ac7916c6e6ad87b15f944';\n         try {const response = await axios.get(`/movie/${this.id}?api_key=${API_KEY}&language=en-US`) \n        //  console.log(response); \n         return response;   \n            \n        } catch (error) {console.error(error);\n            \n        }\n       }\n       get filmId(){return this.id\n\n       }\n\n       set filmId(newId){\n        this.id = newId;\n       }\n}\n\n\n",null],"names":["$bpxeT","parcelRequire","$73555eb24ab144f1$export$2e2bcd8739ae039","MovieService","this","id","key","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","defaults","baseURL","get","concat","_this","_ctx","sent","console","error","t0","newId","$4e3b4b7910be1058$var$movieService","$4e3b4b7910be1058$var$saveDataStorage","JSON","parse","localStorage","getItem","queue","watched","$4e3b4b7910be1058$var$_onFilmItemClick","event","filmCardId","backendData","markup","preventDefault","target","parentNode","parentElement","nodeName","filmId","fetchById","$4e3b4b7910be1058$var$createFilmModalMarkup","data","$5hsTI","cleanerMarkup","$4Nugj","refs","modalFilmWrap","$4e3b4b7910be1058$var$renderFilmModalMarkup","backdropEl","classList","remove","apply","arguments","poster_path","original_title","title1","title","vote_average","vote_count","genres","popularity","overview","genreItems","map","param","name","join","toUpperCase","insertAdjacentHTML","length","watchedHederBtnEl","textContent","queueHederBtnEl","log","filmList","addEventListener","closeBtnEl","add","e","dataset","action","value","push","setItem","stringify","value2"],"version":3,"file":"films.c3878301.js.map"}