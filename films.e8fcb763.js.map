{"mappings":"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","sources":["src/js/modal-filmoteka.js","src/js/film-api.js"],"sourcesContent":["import { refs } from './refs';\nimport MovieService from './film-api';\nimport { genresList } from './genres-list';\nimport { title } from 'process';\nimport {cleanerMarkup} from './createMarkUp'\n\nconst movieService = new MovieService();\n\nlet saveDataStorage = JSON.parse(localStorage.getItem('saveDataStorage')) ||  {\n  queue: [],\n  watched: [],\n}\nif (saveDataStorage.watched.length !== 0) {\n  refs.watchedHederBtnEl.textContent = `watched  '${saveDataStorage.watched.length}'`;\n}\nif (saveDataStorage.watched.length !== 0) {\n  refs.queueHederBtnEl.textContent = `queue '${saveDataStorage.queue.length}'`;\n}\nconsole.log(saveDataStorage)\n\n\nrefs.filmList.addEventListener('click', onFilmItemClick);\nrefs.closeBtnEl.addEventListener('click', onCloseFilmModal);\nrefs.modalFilmWrap.addEventListener('click', onModalBtnClick);\nrefs.watchedHederBtnEl.addEventListener('click', onWatchedHederBtnClick);\nrefs.queueHederBtnEl.addEventListener('click', onQueueHederBtnClick);\n\n\nfunction onWatchedHederBtnClick() {\n  cleanerMarkup(refs.filmList);\n}\n\nfunction onQueueHederBtnClick() {\n  cleanerMarkup(refs.filmList);\n}\n\n\nasync function onFilmItemClick(event) {\n  event.preventDefault();\n  if (event.target.parentNode.parentElement.nodeName !== 'A') {\n    return;\n  }\n  let filmCardId = event.target.parentNode.parentElement.id;\n  // console.dir(event.target.parentNode.parentElement);\n  movieService.filmId = filmCardId;\n  const backendData = await movieService.fetchById();\n  const markup = await createFilmModalMarkup(backendData.data);\n  cleanerMarkup(refs.modalFilmWrap);\n  renderFilmModalMarkup(markup);\n  \n  \n  refs.backdropEl.classList.remove('visually-hidden');\n}\n\nfunction createFilmModalMarkup(data) {\n  const {\n    poster_path,\n    original_title,\n    title,\n    vote_average,\n    vote_count,\n    genres,\n    popularity,\n    overview,\n    id,\n  } = data;\n  const genreItems = genres.map(({ name }) => name).join(', ');\n  const markup = `<div class=\"modal-film-image-wrap\"><img class=\"modal-film-image\" src=\"https://image.tmdb.org/t/p/original${poster_path}\n    \" alt=\"${title}\" width=\"375\" height=\"478\">\n    </div>\n    <div class=\"modal-film-info-wrap\">\n    <h2 class=\"modal-film-title\">${title}</h2>\n    <div class=\"modal-film-info-list\">\n    <ul class=\"modal-film-properties-list\">\n      <li class=\"modal-film-properties-item\">Vote/Votes</li>\n      <li class=\"modal-film-properties-item\">Popularity</li>\n      <li class=\"modal-film-properties-item\">Original Title</li>\n      <li class=\"modal-film-properties-item\">Genre</li>\n    </ul>\n    <ul class=\"modal-film-value-list\">\n      <li class=\"modal-film-value-item\"><span class=\"modal-film-vote-average\">${vote_average}</span>/<span class=\"modal-film-vote-count\">${vote_count}</span></li>\n      <li class=\"modal-film-value-item\">${popularity}</li>\n      <li class=\"modal-film-value-item\">${original_title.toUpperCase()}</li>\n      <li class=\"modal-film-value-item\">${genreItems}</li>\n    </ul>\n    </div>\n    <h3 class=\"modal-film-about-title\">ABOUT</h3>\n    <p class=\"modal-film-about-text\">${overview}</p>\n    <ul class=\"modal-film-button-list\">\n      <li class=\"modal-film-button-item\"><button id=\"${id}\" class=\"modal-film-button\" type=\"button\" data-action='watched'>ADD TO WATCHED</button></li>\n      <li class=\"modal-film-button-item\"><button id=\"${id}\" class=\"modal-film-button\" type=\"button\" data-action='queue'>ADD TO QUEUE</button></li>\n    </ul> </div>`;\n  return markup;\n}\n\nfunction renderFilmModalMarkup(markup) {\n  refs.modalFilmWrap.insertAdjacentHTML('beforeend', markup);\n\n}\n\nfunction onCloseFilmModal() {\n  refs.backdropEl.classList.add('visually-hidden');\n  cleanerMarkup(refs.modalFilmWrap);\n}\n\n// добавили слушателя после рендера кнопок\n    // refs.queueModalBtnEl.addEventListener(\"click\", onQueueModalBtnClick);\n    // refs.watchedModalBtnEl.addEventListener(\"click\", onWatchedModalBtnClick);\n\nfunction onModalBtnClick(e) {\n  if (e.target.nodeName !== \"BUTTON\") {\n    return;\n  }\n  \n  if (e.target.dataset.action === \"watched\") {\n    // console.log(e.target.id);\n    let value = e.target.id;\n    \n    saveDataStorage.watched.push(value);\n    if (saveDataStorage.watched.length !== 0) {\n  refs.watchedHederBtnEl.textContent = `watched  '${saveDataStorage.watched.length}'`;\n}\n    localStorage.setItem('saveDataStorage', JSON.stringify(saveDataStorage))\n  }\n  \n  if (e.target.dataset.action === \"queue\") {\n    let value2 = e.target.id;\n    \n    saveDataStorage.queue.push(value2);\n    \n    if (saveDataStorage.watched.length !== 0) {\n  refs.queueHederBtnEl.textContent = `queue '${saveDataStorage.queue.length}'`;\n}\n    localStorage.setItem('saveDataStorage', JSON.stringify(saveDataStorage))\n  }\n}\n\n","import axios from \"axios\";\nexport default class MovieService {\n    constructor() {\n        this.id = 0;\n       }\n       async fetchById(){\n        axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n        const API_KEY = '74bfe718a55ac7916c6e6ad87b15f944';\n         try {const response = await axios.get(`/movie/${this.id}?api_key=${API_KEY}&language=en-US`) \n        //  console.log(response); \n         return response;   \n            \n        } catch (error) {console.error(error);\n            \n        }\n       }\n       get filmId(){return this.id\n\n       }\n\n       set filmId(newId){\n        this.id = newId;\n       }\n}\n\n\n"],"names":["$krGWQ","parcelRequire","$2shzp","$b7eb70fc4c285a09$var$movieService","async","$parcel$interopDefault","defaults","baseURL","get","this","id","error","console","filmId","newId","constructor","$b7eb70fc4c285a09$var$saveDataStorage","JSON","parse","localStorage","getItem","queue","watched","length","refs","watchedHederBtnEl","textContent","queueHederBtnEl","log","filmList","addEventListener","event","preventDefault","target","parentNode","parentElement","nodeName","filmCardId","backendData","fetchById","markup","data","poster_path","original_title","title","title1","vote_average","vote_count","genres","popularity","overview","genreItems","map","name","join","toUpperCase","$b7eb70fc4c285a09$var$createFilmModalMarkup","$1vg23","cleanerMarkup","modalFilmWrap","insertAdjacentHTML","$b7eb70fc4c285a09$var$renderFilmModalMarkup","backdropEl","classList","remove","closeBtnEl","add","e","dataset","action","value","push","setItem","stringify","value2"],"version":3,"file":"films.e8fcb763.js.map"}